apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentbit
  namespace: logging
data:
  fluent-bit.conf: |
    [SERVICE]
        flush 1
        gaemon off
        log_level debug
        # при изменении файла можно применить манифест, конфиг автоматически обновится
        hot_reload on
        parser flog
        parsers_file parsers.conf
    @INCLUDE inputs.conf
    @INCLUDE filters.conf
    @INCLUDE outputs.conf

  inputs.conf: |
    [INPUT]
        name tail
        parser flog
        path /logs/generated.log
        tag fake_log

  outputs.conf: |
    [OUTPUT]
        name loki
        match fake_log
        host loki
        port 3100
        labels instance=flog, $status_group

  filters.conf: |
    [FILTER]
        name modify
        match fake_log
        remove host
        remove user-identifier
        remove bytes
        remove referer

    [FILTER]
        name lua
        match fake_log
        script /fluent-bit/etc/filters.lua
        call create_status_group

  parsers.conf: |
    [PARSER]
        Name flog
        Format json
        Time_Key datetime
        Time_Format %d/%B/%Y:%H:%M:%S
  
  filters.lua: |
    function create_status_group(tag, timestamp, record)
        local status = record["status"]
        if tostring(status):match("^1") then
            record["status_group"] = 100
        elseif tostring(status):match("^2") then
            record["status_group"] = 200
        elseif tostring(status):match("^3") then
            record["status_group"] = 300
        elseif tostring(status):match("^4") then
            record["status_group"] = 400
        elseif tostring(status):match("^5") then
            record["status_group"] = 500
        end
        return 1, timestamp, record
    end

# 17/May/2025:09:28:54 +0000
# https://timeweb.cloud/tutorials/python/metod-strptime-i-strftime-v-python
# https://docs.fluentbit.io/manual/pipeline/filters/lua

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluentbit
  namespace: logging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fluentbit
  template:
    metadata:
      name: fluentbit
      namespace: logging
      labels:
        app: fluentbit
    spec:
      containers:
        - name: fluentbit
          image: fluent/fluent-bit:4.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 2021
          volumeMounts:
            - name: fluentbit
              mountPath: /fluent-bit/etc/
            - name: logs
              mountPath: /logs/
      volumes:
        - name: fluentbit
          configMap:
            name: fluentbit
        - name: logs
          nfs:
            server: 192.168.0.1
            path: /nfs/nginx-logs

---
apiVersion: v1
kind: Service
metadata:
  name: fluentbit
  namespace: logging
spec:
  type: NodePort
  selector:
    app: fluentbit
  ports:
    - port: 2021
      targetPort: 2021
      nodePort: 30200
